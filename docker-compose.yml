networks:
  kafka-network:
    name: kafka-network
    driver: bridge

services:
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-kraft
    networks:
      - kafka-network
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_CLUSTER_ID: 0pQBJPTeQQij2toZJBmJ_g
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    healthcheck:
      test: ["CMD", "kafka-consumer-groups", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:

      - ./kafka.properties:/etc/kafka/kafka.properties
      - kafka_data_volume:/var/lib/kafka/data
    command: >
      sh -c "
      kafka-storage format --ignore-formatted --cluster-id=0pQBJPTeQQij2toZJBmJ_g --config /etc/kafka/kafka.properties &&
      kafka-server-start /etc/kafka/kafka.properties
      "

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    networks:
      - kafka-network
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      SERVER_PORT: 9000
    depends_on:
      kafka:
        condition: service_healthy

  api:
    build:
      context: ./api
    container_name: api
    networks:
      - kafka-network
    ports:
      - "8000:8000"
    depends_on:
      kafka:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "5000:5000"
    networks:
      - kafka-network
    depends_on:
      - api
    environment:
      - BACKEND_URL=http://api:8000

  postgres:
    image: postgres:16.6-alpine
    container_name: postgres
    networks:
      - kafka-network
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data_volume:/var/lib/postgresql/data

volumes:
  postgres_data_volume:
  kafka_data_volume:
